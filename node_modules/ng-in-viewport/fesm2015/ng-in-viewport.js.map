{"version":3,"file":"ng-in-viewport.js.map","sources":["ng://ng-in-viewport/lib/in-viewport-config.ts","ng://ng-in-viewport/lib/in-viewport.service.ts","ng://ng-in-viewport/lib/in-viewport.directive.ts","ng://ng-in-viewport/lib/in-viewport.module.ts"],"sourcesContent":["export enum InViewportConfigDirection {\n  BOTH = 'both',\n  VERTICAL = 'vertical',\n  HORIZONTAL = 'horizontal'\n}\n\nexport interface InViewportConfigCheckFnOptions {\n  force: boolean;\n  config: InViewportConfig;\n}\n\nexport type InViewportConfigCheckFn = (\n  entry: IntersectionObserverEntry,\n  options: InViewportConfigCheckFnOptions\n) => any;\n\nexport interface InViewportConfigOptions {\n  root?: Element;\n  rootMargin?: string;\n  threshold?: number | number[];\n  partial?: boolean;\n  direction?: InViewportConfigDirection;\n  checkFn?: InViewportConfigCheckFn;\n}\n\nconst DEFAULT_THRESHOLD = [0, 1];\n\nexport class InViewportConfig {\n  private _root: Element;\n  private _rootMargin: string = '0px 0px 0px 0px';\n  private _threshold: number | number[] = [...DEFAULT_THRESHOLD];\n  private _partial: boolean = true;\n  private _direction: InViewportConfigDirection = InViewportConfigDirection.BOTH;\n  private _checkFn: InViewportConfigCheckFn;\n\n  constructor(options?: InViewportConfigOptions) {\n    if (Object.prototype.toString.call(options) === '[object Object]') {\n      ['root', 'rootMargin', 'threshold', 'partial', 'direction', 'checkFn'].forEach((prop) => {\n        if (options.hasOwnProperty(prop)) {\n          this[prop] = options[prop];\n        }\n      });\n    }\n  }\n\n  public get root(): Element {\n    return this._root;\n  }\n\n  public set root(value: Element) {\n    this._root = value && value.nodeType === 1 ? value : undefined;\n  }\n\n  public get rootMargin(): string {\n    return this._rootMargin;\n  }\n\n  public set rootMargin(value: string) {\n    this._rootMargin = value && typeof value === 'string' ? value : '0px 0px 0px 0px';\n  }\n\n  public get threshold(): number | number[] {\n    return this._threshold;\n  }\n\n  public set threshold(value: number | number[]) {\n    let threshold = [];\n    const isValidThreshold = (val: any) => typeof val === 'number' && val >= 0 && val <= 1;\n    if (isValidThreshold(value)) {\n      threshold = [value];\n    } else if (Array.isArray(value) && value.length) {\n      threshold = value.filter((val) => isValidThreshold(val));\n    }\n    if (threshold.length === 0) {\n      threshold = [...DEFAULT_THRESHOLD];\n    }\n    this._threshold = threshold;\n  }\n\n  public get partial(): boolean {\n    return this._partial;\n  }\n\n  public set partial(value: boolean) {\n    this._partial = !!value;\n  }\n\n  public get direction(): InViewportConfigDirection {\n    return this._direction;\n  }\n\n  public set direction(value: InViewportConfigDirection) {\n    const isValidValue = (val: any) => {\n      return (\n        [\n          InViewportConfigDirection.BOTH,\n          InViewportConfigDirection.HORIZONTAL,\n          InViewportConfigDirection.VERTICAL\n        ].indexOf(val) >= 0\n      );\n    };\n    this._direction = isValidValue(value) ? value : InViewportConfigDirection.BOTH;\n  }\n\n  public get checkFn(): InViewportConfigCheckFn {\n    return this._checkFn;\n  }\n\n  public set checkFn(value: InViewportConfigCheckFn) {\n    this._checkFn = value;\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { InViewportConfig } from './in-viewport-config';\n\nexport interface InViewportRegistryEntry {\n  root: Element;\n  targets: Set<Element>;\n  observer: IntersectionObserver;\n}\n\nexport type InViewportTrigger = Subject<IntersectionObserverEntry>;\nexport type InViewportRegistry = InViewportRegistryEntry[];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InViewportService {\n  public readonly trigger$: InViewportTrigger = new Subject<IntersectionObserverEntry>();\n  private registry: InViewportRegistry = [];\n\n  constructor(private ngZone: NgZone) {}\n\n  private emitTrigger(entries: IntersectionObserverEntry[]) {\n    if (Array.isArray(entries) && entries.length) {\n      entries.forEach((entry) => this.trigger$.next(entry));\n    }\n  }\n\n  private getRootElement(element?: Element) {\n    return element && element.nodeType === Node.ELEMENT_NODE ? element : undefined;\n  }\n\n  private findEntry(root: Element) {\n    return this.registry.find((entry) => entry.root === this.getRootElement(root));\n  }\n\n  public register(target: Element, config: InViewportConfig): void {\n    this.ngZone.runOutsideAngular(() => {\n      const foundedEntry = this.findEntry(config.root);\n      if (foundedEntry && !foundedEntry.targets.has(target)) {\n        foundedEntry.targets.add(target);\n        foundedEntry.observer.observe(target);\n      } else {\n        const options: any = {\n          root: this.getRootElement(config.root),\n          rootMargin: config.rootMargin,\n          threshold: config.threshold\n        };\n        const entry: InViewportRegistryEntry = {\n          root: this.getRootElement(config.root),\n          targets: new Set([target]),\n          observer: new IntersectionObserver(\n            (entries: IntersectionObserverEntry[]) => this.ngZone.run(() => this.emitTrigger(entries)),\n            options\n          )\n        };\n        entry.observer.observe(target);\n        this.registry = [...this.registry, entry];\n      }\n    });\n  }\n\n  public unregister(target: Element, config: InViewportConfig): void {\n    this.ngZone.runOutsideAngular(() => {\n      const foundedEntry = this.findEntry(config.root);\n      if (foundedEntry) {\n        const { observer, targets } = foundedEntry;\n        if (targets.has(target)) {\n          observer.unobserve(target);\n          targets.delete(target);\n        }\n        if (targets.size === 0) {\n          observer.disconnect();\n          this.registry = this.registry.filter((entry) => entry !== foundedEntry);\n        }\n      }\n    });\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Output,\n  PLATFORM_ID\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { InViewportConfig, InViewportConfigOptions } from './in-viewport-config';\nimport { InViewportService } from './in-viewport.service';\n\nexport const InViewportMetadata = Symbol('InViewportMetadata');\n\n@Directive({\n  selector: '[inViewport]'\n})\nexport class InViewportDirective implements AfterViewInit, OnDestroy {\n  private config: InViewportConfig = new InViewportConfig();\n  private readonly subscription: Subscription = new Subscription();\n\n  @Input('inViewportOptions')\n  private set options(value: InViewportConfigOptions) {\n    this.config = new InViewportConfig(value);\n  }\n\n  @Output() public readonly inViewportAction: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private elementRef: ElementRef,\n    private inViewport: InViewportService\n  ) {}\n\n  public ngAfterViewInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.inViewport.register(this.elementRef.nativeElement, this.config);\n      this.subscription.add(\n        this.inViewport.trigger$\n          .pipe(filter((entry: IntersectionObserverEntry) => entry && entry.target === this.elementRef.nativeElement))\n          .subscribe((entry: IntersectionObserverEntry) => this.emitAction(entry, false))\n      );\n    } else {\n      this.emitAction(undefined, true);\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n    if (isPlatformBrowser(this.platformId)) {\n      this.inViewport.unregister(this.elementRef.nativeElement, this.config);\n    }\n  }\n\n  private check(entry: IntersectionObserverEntry, force: boolean) {\n    const isVisible = () => {\n      const partiallyVisible = entry.isIntersecting || entry.intersectionRatio > 0;\n      const completelyVisible = entry.intersectionRatio >= 1;\n      return this.config.partial ? partiallyVisible : completelyVisible;\n    };\n    const visible = force || !entry || isVisible();\n    return { [InViewportMetadata]: { entry }, target: this.elementRef.nativeElement, visible };\n  }\n\n  private emitAction(entry: IntersectionObserverEntry, force: boolean): void {\n    const event = this.config.checkFn\n      ? this.config.checkFn(entry, { force, config: this.config })\n      : this.check(entry, force);\n    this.inViewportAction.emit(event);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InViewportDirective } from './in-viewport.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [InViewportDirective],\n  exports: [InViewportDirective]\n})\nexport class InViewportModule {}\n"],"names":[],"mappings":"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"}
