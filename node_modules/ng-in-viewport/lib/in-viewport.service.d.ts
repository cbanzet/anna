import { NgZone } from '@angular/core';
import { Subject } from 'rxjs';
import { InViewportConfig } from './in-viewport-config';
export interface InViewportRegistryEntry {
    root: Element;
    targets: Set<Element>;
    observer: IntersectionObserver;
}
export declare type InViewportTrigger = Subject<IntersectionObserverEntry>;
export declare type InViewportRegistry = InViewportRegistryEntry[];
export declare class InViewportService {
    private ngZone;
    readonly trigger$: InViewportTrigger;
    private registry;
    constructor(ngZone: NgZone);
    private emitTrigger(entries);
    private getRootElement(element?);
    private findEntry(root);
    register(target: Element, config: InViewportConfig): void;
    unregister(target: Element, config: InViewportConfig): void;
}
